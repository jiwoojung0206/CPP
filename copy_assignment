#include <iostream>
#include <cstring>


class Mystring {
private:
    char *str;
public:
    Mystring();
    Mystring(const char *s);
    Mystring(const Mystring &source);
    ~Mystring();
    
    Mystring &operator= (const Mystring &rhs);
};

   Mystring::Mystring()
        : str{nullptr} {
        str = new char[1];
        *str = '\0';
        }
    
    Mystring::Mystring(const char *s)
        : str{nullptr} {
        if (s == nullptr) {
            str = new char[1];
            *str = '\0';
        }
        
        else  {
            str = new char[std::strlen(s) + 1];
            std::strcpy(str,s);
        }
    }
    
    Mystring::Mystring(const Mystring &source)
        : str{nullptr} {
            str = new char[std::strlen(source.str) +1];
            std::strcpy(str, source.str);
        }
    
    Mystring::~Mystring() {
        delete[] str;
    }
    
    Mystring &Mystring::operator=(const Mystring &rhs) {
        if (this == &rhs)
            return *this;
            
        delete[] this->str;
        str = new char[std::strlen(rhs.str) + 1];
        std::strcpy(this->str, rhs.str);
        return *this;
    }

int main() {
    
    Mystring a{"Hello"};
    Mystring b;
    
    b = a;
    
    
    std::cout << std::endl;
    return 0;
}
